@page "/Details/{id:guid}"
@inject HttpClient http
@inject IJSRuntime JSRuntime
@using System.Net.Http.Headers
@inject NavigationManager Navigation

<PageTitle>Details</PageTitle>

<div class="container">
    <SearchBar/>

@if (piece == null)
{
    <p>Carregando...</p>
}
else
{   
    <div>    
        <MainTitle Title="@TitleName"/>
    </div>

    <div class="main-content">
        <BlockText Head="@HeadText" Text="@piece.Description"/>
        <AnalogImage Image="https://static1.colliderimages.com/wordpress/wp-content/uploads/2024/02/the-matrix-code-keanu-reeves.jpg"/>
    </div>
    
    <div>
        <MentionsSection/>
    </div>
}

</div>

@code {
    
    private String? HeadText = "Movie \r\n 1999 \r\n United States";

    private String? TitleName;

    [Parameter]
    public Guid Id { get; set; }

    private Piece? piece;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            @* var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken"); *@
            
            var url = $"http://localhost:5105/api/piece/{Id}";
            
            var request = new HttpRequestMessage(HttpMethod.Get, url);
            @* request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token); *@
            
            var response = await http.SendAsync(request);
            
            if (response.IsSuccessStatusCode)
            {
                piece = await response.Content.ReadFromJsonAsync<Piece>();
                TitleName = piece.Name + " (" + piece.ReleaseYear + ")";
            }
            else
            {
                Navigation.NavigateTo("/error");
                errorMessage = $"Error: {response.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            Navigation.NavigateTo("/error");
            errorMessage = $"Fail: {ex.Message}";
        }
    }
}